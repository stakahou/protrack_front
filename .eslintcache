[{"/home/joshua/Documentos/protrack_front/src/styles/global.tsx":"1","/home/joshua/Documentos/protrack_front/src/index.tsx":"2","/home/joshua/Documentos/protrack_front/src/helpers/assets.ts":"3","/home/joshua/Documentos/protrack_front/src/providers/contextProviderComposer.ts":"4","/home/joshua/Documentos/protrack_front/src/styles/themes/default.ts":"5","/home/joshua/Documentos/protrack_front/src/layouts/managementLayout/index.tsx":"6","/home/joshua/Documentos/protrack_front/src/layouts/navBar/index.tsx":"7","/home/joshua/Documentos/protrack_front/src/reportWebVitals.ts":"8","/home/joshua/Documentos/protrack_front/src/providers/index.tsx":"9","/home/joshua/Documentos/protrack_front/src/views/login/styles.ts":"10","/home/joshua/Documentos/protrack_front/src/layouts/navBar/styles.ts":"11","/home/joshua/Documentos/protrack_front/src/views/login/index.tsx":"12","/home/joshua/Documentos/protrack_front/src/routes/index.tsx":"13","/home/joshua/Documentos/protrack_front/src/views/management/project/index.tsx":"14","/home/joshua/Documentos/protrack_front/src/components/header/index.tsx":"15","/home/joshua/Documentos/protrack_front/src/hooks/useDocumentTitle.tsx":"16","/home/joshua/Documentos/protrack_front/src/layouts/managementLayout/styles.ts":"17","/home/joshua/Documentos/protrack_front/src/components/header/styles.ts":"18","/home/joshua/Documentos/protrack_front/src/components/table/utils.tsx":"19","/home/joshua/Documentos/protrack_front/src/components/tableActions.tsx":"20","/home/joshua/Documentos/protrack_front/src/views/management/project/columns.tsx":"21","/home/joshua/Documentos/protrack_front/src/components/table/index.tsx":"22","/home/joshua/Documentos/protrack_front/src/components/table/style.ts":"23","/home/joshua/Documentos/protrack_front/src/views/management/contributor/index.tsx":"24","/home/joshua/Documentos/protrack_front/src/views/management/contributor/columns.tsx":"25","/home/joshua/Documentos/protrack_front/src/views/management/protrack/index.tsx":"26","/home/joshua/Documentos/protrack_front/src/components/reactSelect.tsx":"27","/home/joshua/Documentos/protrack_front/src/views/management/project/styles.ts":"28","/home/joshua/Documentos/protrack_front/src/views/management/protrack/styles.ts":"29","/home/joshua/Documentos/protrack_front/src/views/management/protrack/components/contributorProtacks.tsx":"30","/home/joshua/Documentos/protrack_front/src/views/management/contributor/styles.ts":"31","/home/joshua/Documentos/protrack_front/src/configs/graphqlConfig.ts":"32","/home/joshua/Documentos/protrack_front/src/generated/hooks.tsx":"33","/home/joshua/Documentos/protrack_front/src/shared/enums.ts":"34","/home/joshua/Documentos/protrack_front/src/hooks/useLocalStorage.tsx":"35","/home/joshua/Documentos/protrack_front/src/hooks/useStorage.tsx":"36","/home/joshua/Documentos/protrack_front/src/hooks/useStores.tsx":"37","/home/joshua/Documentos/protrack_front/src/stores/index.ts":"38","/home/joshua/Documentos/protrack_front/src/stores/sessionStore.ts":"39","/home/joshua/Documentos/protrack_front/src/components/loading.tsx":"40","/home/joshua/Documentos/protrack_front/src/components/modal/index.tsx":"41","/home/joshua/Documentos/protrack_front/src/components/modal/styles.ts":"42","/home/joshua/Documentos/protrack_front/src/views/management/project/form/index.tsx":"43","/home/joshua/Documentos/protrack_front/src/views/management/project/form/schema.ts":"44","/home/joshua/Documentos/protrack_front/src/components/inputForm.tsx":"45","/home/joshua/Documentos/protrack_front/src/hooks/useValidateForm.tsx":"46","/home/joshua/Documentos/protrack_front/src/views/management/project/new/index.tsx":"47","/home/joshua/Documentos/protrack_front/src/configs/toastConfig.ts":"48","/home/joshua/Documentos/protrack_front/src/views/management/project/edit/index.tsx":"49","/home/joshua/Documentos/protrack_front/src/views/management/contributor/edit/index.tsx":"50","/home/joshua/Documentos/protrack_front/src/views/management/contributor/form/index.tsx":"51","/home/joshua/Documentos/protrack_front/src/views/management/contributor/form/schema.ts":"52","/home/joshua/Documentos/protrack_front/src/views/management/projectContributors/index.tsx":"53","/home/joshua/Documentos/protrack_front/src/views/management/projectContributors/styles.ts":"54","/home/joshua/Documentos/protrack_front/src/components/search.tsx":"55","/home/joshua/Documentos/protrack_front/src/components/shortlist/index.tsx":"56","/home/joshua/Documentos/protrack_front/src/components/shortlist/styles.ts":"57","/home/joshua/Documentos/protrack_front/src/components/shortlist/customScrollbarsVirtualList.tsx":"58","/home/joshua/Documentos/protrack_front/src/components/shortlist/customScrollbars.tsx":"59","/home/joshua/Documentos/protrack_front/src/components/shortlist/customScrollbarsPanel.tsx":"60","/home/joshua/Documentos/protrack_front/src/helpers/string.ts":"61","/home/joshua/Documentos/protrack_front/src/generated/schemas.tsx":"62"},{"size":2001,"mtime":1611800744078,"results":"63","hashOfConfig":"64"},{"size":999,"mtime":1611700285342,"results":"65","hashOfConfig":"64"},{"size":118,"mtime":1610666088275,"results":"66","hashOfConfig":"64"},{"size":419,"mtime":1610672520897,"results":"67","hashOfConfig":"64"},{"size":341,"mtime":1610665617038,"results":"68","hashOfConfig":"64"},{"size":734,"mtime":1612414384359,"results":"69","hashOfConfig":"64"},{"size":2040,"mtime":1611539295589,"results":"70","hashOfConfig":"64"},{"size":425,"mtime":1610652761982,"results":"71","hashOfConfig":"64"},{"size":402,"mtime":1611279525864,"results":"72","hashOfConfig":"64"},{"size":1927,"mtime":1610714125076,"results":"73","hashOfConfig":"64"},{"size":77,"mtime":1610673091503,"results":"74","hashOfConfig":"64"},{"size":2395,"mtime":1611548121147,"results":"75","hashOfConfig":"64"},{"size":1014,"mtime":1612414392243,"results":"76","hashOfConfig":"64"},{"size":2610,"mtime":1611929654231,"results":"77","hashOfConfig":"64"},{"size":833,"mtime":1610718161768,"results":"78","hashOfConfig":"64"},{"size":207,"mtime":1610717459073,"results":"79","hashOfConfig":"64"},{"size":141,"mtime":1611806556906,"results":"80","hashOfConfig":"64"},{"size":186,"mtime":1610717420510,"results":"81","hashOfConfig":"64"},{"size":1174,"mtime":1610718180652,"results":"82","hashOfConfig":"64"},{"size":1195,"mtime":1610721036103,"results":"83","hashOfConfig":"64"},{"size":981,"mtime":1611616952649,"results":"84","hashOfConfig":"64"},{"size":5613,"mtime":1611705253385,"results":"85","hashOfConfig":"64"},{"size":247,"mtime":1610718180648,"results":"86","hashOfConfig":"64"},{"size":1585,"mtime":1612494701834,"results":"87","hashOfConfig":"64"},{"size":902,"mtime":1612494742013,"results":"88","hashOfConfig":"64"},{"size":3190,"mtime":1612764756362,"results":"89","hashOfConfig":"64"},{"size":1278,"mtime":1610718571022,"results":"90","hashOfConfig":"64"},{"size":77,"mtime":1610716891541,"results":"91","hashOfConfig":"64"},{"size":77,"mtime":1610724011664,"results":"92","hashOfConfig":"64"},{"size":1202,"mtime":1612578660479,"results":"93","hashOfConfig":"64"},{"size":77,"mtime":1610722065399,"results":"94","hashOfConfig":"64"},{"size":1352,"mtime":1611279382227,"results":"95","hashOfConfig":"64"},{"size":23907,"mtime":1612755444538,"results":"96","hashOfConfig":"64"},{"size":85,"mtime":1611536265548,"results":"97","hashOfConfig":"64"},{"size":207,"mtime":1611535594561,"results":"98","hashOfConfig":"64"},{"size":843,"mtime":1611535594605,"results":"99","hashOfConfig":"64"},{"size":142,"mtime":1611537875140,"results":"100","hashOfConfig":"64"},{"size":172,"mtime":1611538717800,"results":"101","hashOfConfig":"64"},{"size":430,"mtime":1611537926083,"results":"102","hashOfConfig":"64"},{"size":974,"mtime":1612149391367,"results":"103","hashOfConfig":"64"},{"size":1172,"mtime":1611929632011,"results":"104","hashOfConfig":"64"},{"size":116,"mtime":1611540348351,"results":"105","hashOfConfig":"64"},{"size":1003,"mtime":1611620751302,"results":"106","hashOfConfig":"64"},{"size":147,"mtime":1611620748186,"results":"107","hashOfConfig":"64"},{"size":974,"mtime":1611620783149,"results":"108","hashOfConfig":"64"},{"size":1365,"mtime":1611619841818,"results":"109","hashOfConfig":"64"},{"size":1881,"mtime":1611710949290,"results":"110","hashOfConfig":"64"},{"size":192,"mtime":1611700202075,"results":"111","hashOfConfig":"64"},{"size":2077,"mtime":1611711075460,"results":"112","hashOfConfig":"64"},{"size":2183,"mtime":1612157109818,"results":"113","hashOfConfig":"64"},{"size":1476,"mtime":1611719407795,"results":"114","hashOfConfig":"64"},{"size":231,"mtime":1611719357984,"results":"115","hashOfConfig":"64"},{"size":6018,"mtime":1612330145448,"results":"116","hashOfConfig":"64"},{"size":132,"mtime":1611806322869,"results":"117","hashOfConfig":"64"},{"size":1868,"mtime":1611808571776,"results":"118","hashOfConfig":"64"},{"size":3868,"mtime":1612329666286,"results":"119","hashOfConfig":"64"},{"size":134,"mtime":1612142808988,"results":"120","hashOfConfig":"64"},{"size":281,"mtime":1612024198709,"results":"121","hashOfConfig":"64"},{"size":410,"mtime":1612144341147,"results":"122","hashOfConfig":"64"},{"size":1299,"mtime":1612329653014,"results":"123","hashOfConfig":"64"},{"size":136,"mtime":1612137269925,"results":"124","hashOfConfig":"64"},{"size":3478,"mtime":1612540111395,"results":"125","hashOfConfig":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},"92du0o",{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"128"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"128"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"128"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"128"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"128"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"128"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"128"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/joshua/Documentos/protrack_front/src/styles/global.tsx",[],["259","260"],"/home/joshua/Documentos/protrack_front/src/index.tsx",[],"/home/joshua/Documentos/protrack_front/src/helpers/assets.ts",[],"/home/joshua/Documentos/protrack_front/src/providers/contextProviderComposer.ts",[],"/home/joshua/Documentos/protrack_front/src/styles/themes/default.ts",[],"/home/joshua/Documentos/protrack_front/src/layouts/managementLayout/index.tsx",[],"/home/joshua/Documentos/protrack_front/src/layouts/navBar/index.tsx",[],"/home/joshua/Documentos/protrack_front/src/reportWebVitals.ts",[],"/home/joshua/Documentos/protrack_front/src/providers/index.tsx",[],"/home/joshua/Documentos/protrack_front/src/views/login/styles.ts",[],"/home/joshua/Documentos/protrack_front/src/layouts/navBar/styles.ts",[],"/home/joshua/Documentos/protrack_front/src/views/login/index.tsx",[],"/home/joshua/Documentos/protrack_front/src/routes/index.tsx",[],"/home/joshua/Documentos/protrack_front/src/views/management/project/index.tsx",["261"],"import { faPlus, faProjectDiagram } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useMemo, useRef, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button, CardBody } from \"reactstrap\";\nimport { Header } from \"../../../components/header\";\nimport { Loading } from \"../../../components/loading\";\nimport { CustomModalProps } from \"../../../components/modal\";\nimport ReactTable from \"../../../components/table\";\nimport { useProjectsQuery } from \"../../../generated/hooks\";\nimport { Project as IProject } from \"../../../generated/schemas\";\nimport { CustomCard } from \"../../../styles/global\";\nimport columns from \"./columns\";\nimport { EditProject } from \"./edit\";\nimport { NewProject } from \"./new\";\nimport { Styles } from \"./styles\";\n\nexport const Project = () => {\n  const modalNewRef = useRef<CustomModalProps>(null);\n\n  const modalEditRef = useRef<CustomModalProps>(null);\n\n  const [selectedProjet, setSelectedProjet] = useState<IProject>();\n\n  const navigate = useNavigate();\n\n  const { data, loading, refetch } = useProjectsQuery({\n    fetchPolicy: \"no-cache\",\n  });\n\n  const projects = useMemo(\n    () =>\n      (data?.projects ?? [])\n        .map((p: any) => ({\n          ...p,\n          actions: {\n            edit: () => {\n              setSelectedProjet(p);\n              modalEditRef.current?.open();\n            },\n            members: () => {\n              navigate(`/management/projects/${p.id}/contributors`, {\n                state: { project: p },\n              });\n            },\n            // remove: () => console.log(\"remove :>> \", p.id),\n            // detail: () => console.log(\"detail :>> \", p.id),\n          },\n        }))\n        .sort((a, b) => a.name.localeCompare(b.name)),\n    [data]\n  );\n\n  return (\n    <Styles>\n      <Header icon={faProjectDiagram} title=\"PROJETOS\">\n        <div className=\"ml-auto\">\n          <Button\n            color=\"primary\"\n            className=\"shadow-sm\"\n            size=\"sm\"\n            onClick={() => modalNewRef.current?.open()}\n          >\n            <FontAwesomeIcon icon={faPlus} /> Novo\n          </Button>\n        </div>\n      </Header>\n\n      <CustomCard>\n        <CardBody>\n          <Loading loading={loading}>\n            <ReactTable columns={columns} data={projects} />\n          </Loading>\n        </CardBody>\n      </CustomCard>\n\n      <NewProject modalRef={modalNewRef} refetch={refetch} />\n\n      <EditProject\n        modalRef={modalEditRef}\n        project={selectedProjet}\n        refetch={refetch}\n      />\n    </Styles>\n  );\n};\n","/home/joshua/Documentos/protrack_front/src/components/header/index.tsx",[],"/home/joshua/Documentos/protrack_front/src/hooks/useDocumentTitle.tsx",[],["262","263"],"/home/joshua/Documentos/protrack_front/src/layouts/managementLayout/styles.ts",[],"/home/joshua/Documentos/protrack_front/src/components/header/styles.ts",[],"/home/joshua/Documentos/protrack_front/src/components/table/utils.tsx",[],"/home/joshua/Documentos/protrack_front/src/components/tableActions.tsx",[],"/home/joshua/Documentos/protrack_front/src/views/management/project/columns.tsx",[],"/home/joshua/Documentos/protrack_front/src/components/table/index.tsx",[],"/home/joshua/Documentos/protrack_front/src/components/table/style.ts",[],"/home/joshua/Documentos/protrack_front/src/views/management/contributor/index.tsx",[],"/home/joshua/Documentos/protrack_front/src/views/management/contributor/columns.tsx",[],"/home/joshua/Documentos/protrack_front/src/views/management/protrack/index.tsx",["264"],"import { faTasks } from \"@fortawesome/free-solid-svg-icons\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { OptionTypeBase } from \"react-select\";\nimport { CardBody } from \"reactstrap\";\nimport { Header } from \"../../../components/header\";\nimport { Loading } from \"../../../components/loading\";\nimport { ReactSelect } from \"../../../components/reactSelect\";\nimport {\n  OnProtrackAddedDocument,\n  useAllContributorsProtracksByProjectLazyQuery,\n  useProjectsQuery,\n} from \"../../../generated/hooks\";\nimport { CustomCard } from \"../../../styles/global\";\nimport { ContributorProtacks } from \"./components/contributorProtacks\";\nimport { Styles } from \"./styles\";\n\nexport const Protrack = () => {\n  const [currentProject, setCurrentProject] = useState<OptionTypeBase>();\n\n  const { data, loading: projectsLoading } = useProjectsQuery();\n\n  const [\n    getProtracks,\n    { loading, data: protracks, subscribeToMore },\n  ] = useAllContributorsProtracksByProjectLazyQuery({\n    fetchPolicy: \"cache-and-network\",\n  });\n\n  useEffect(() => {\n    if (subscribeToMore && currentProject) {\n      console.log(\"aqui\");\n      subscribeToMore({\n        document: OnProtrackAddedDocument,\n        variables: { projectId: currentProject.value },\n        updateQuery: (prev, { subscriptionData }: any) => {\n          console.log(\"subscriptionData :>> \", subscriptionData);\n          console.log(\"prev :>> \", prev);\n          if (!subscriptionData.data?.protrackAdded) return prev;\n\n          const { user, ...protrack } = subscriptionData.data.protrackAdded;\n\n          return Object.assign({}, prev, {\n            project_contributors: [\n              ...prev.project_contributors.map((c) => {\n                if (c.id === user.id)\n                  return { ...c, protracks: [...c.protracks, protrack] };\n                return c;\n              }),\n            ],\n          });\n        },\n      });\n    }\n\n    return () => {};\n  }, [subscribeToMore, currentProject]);\n\n  useEffect(() => {\n    if (currentProject) {\n      getProtracks({ variables: { id: currentProject.value } });\n    }\n  }, [currentProject]);\n\n  const options = useMemo<OptionTypeBase[]>(\n    () =>\n      (data?.projects ?? [])\n        .map(({ id, name }) => ({\n          value: id,\n          label: name,\n        }))\n        .sort((a: any, b: any) => b.label - a.label),\n    [data]\n  );\n\n  const ProtracksCard = useMemo(\n    () =>\n      protracks?.project_contributors.map((protrack) => {\n        return (\n          <CustomCard className=\"mb-3\" key={protrack.id}>\n            <CardBody>\n              <ContributorProtacks protrack={protrack} />\n            </CardBody>\n          </CustomCard>\n        );\n      }),\n    [protracks]\n  );\n\n  return (\n    <Styles>\n      <Header icon={faTasks} title=\"PROTRACKS\"></Header>\n\n      <ReactSelect\n        isLoading={projectsLoading}\n        options={options}\n        placeholder=\"Selecione um Projeto\"\n        className=\"react-select-container mb-5\"\n        classNamePrefix=\"react-select\"\n        onChange={setCurrentProject}\n      />\n\n      <Loading loading={loading}>\n        <p className=\"h5 text-muted\">Colaboradores</p>\n        {ProtracksCard}\n      </Loading>\n    </Styles>\n  );\n};\n","/home/joshua/Documentos/protrack_front/src/components/reactSelect.tsx",["265"],"import React, { forwardRef, ForwardRefRenderFunction, useContext } from \"react\";\r\nimport Select, { OptionTypeBase, Props as SelectProps } from \"react-select\";\r\nimport styled, { DefaultTheme, ThemeContext } from \"styled-components\";\r\n\r\nconst Styles = styled.div`\r\n  .react-select-container {\r\n    box-shadow: ${({ theme }) => theme.shadows.default} !important;\r\n\r\n    .react-select__control {\r\n      border: 0;\r\n    }\r\n\r\n    .react-select__menu {\r\n      .react-select__menu-list {\r\n        .react-select__option {\r\n          &.react-select__option--is-focused {\r\n            color: white;\r\n          }\r\n          :hover {\r\n            color: white;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ReactSelect = forwardRef<any, SelectProps<OptionTypeBase>>(\r\n  (props, ref) => {\r\n    const defaultTheme = useContext<DefaultTheme>(ThemeContext);\r\n\r\n    return (\r\n      <Styles>\r\n        <Select\r\n          ref={ref}\r\n          theme={(theme) => ({\r\n            ...theme,\r\n            borderRadius: 0,\r\n            colors: {\r\n              ...theme.colors,\r\n              primary25: defaultTheme.colors.primary,\r\n              primary: defaultTheme.colors.primary,\r\n            },\r\n          })}\r\n          {...props}\r\n        />\r\n      </Styles>\r\n    );\r\n  }\r\n);\r\n","/home/joshua/Documentos/protrack_front/src/views/management/project/styles.ts",[],"/home/joshua/Documentos/protrack_front/src/views/management/protrack/styles.ts",[],"/home/joshua/Documentos/protrack_front/src/views/management/protrack/components/contributorProtacks.tsx",[],"/home/joshua/Documentos/protrack_front/src/views/management/contributor/styles.ts",[],"/home/joshua/Documentos/protrack_front/src/configs/graphqlConfig.ts",[],"/home/joshua/Documentos/protrack_front/src/generated/hooks.tsx",[],"/home/joshua/Documentos/protrack_front/src/shared/enums.ts",[],"/home/joshua/Documentos/protrack_front/src/hooks/useLocalStorage.tsx",[],"/home/joshua/Documentos/protrack_front/src/hooks/useStorage.tsx",[],"/home/joshua/Documentos/protrack_front/src/hooks/useStores.tsx",[],"/home/joshua/Documentos/protrack_front/src/stores/index.ts",[],"/home/joshua/Documentos/protrack_front/src/stores/sessionStore.ts",[],"/home/joshua/Documentos/protrack_front/src/components/loading.tsx",[],"/home/joshua/Documentos/protrack_front/src/components/modal/index.tsx",[],"/home/joshua/Documentos/protrack_front/src/components/modal/styles.ts",[],"/home/joshua/Documentos/protrack_front/src/views/management/project/form/index.tsx",[],"/home/joshua/Documentos/protrack_front/src/views/management/project/form/schema.ts",[],"/home/joshua/Documentos/protrack_front/src/components/inputForm.tsx",[],"/home/joshua/Documentos/protrack_front/src/hooks/useValidateForm.tsx",["266"],"import { FormHandles, SubmitHandler } from \"@unform/core\";\r\nimport { RefObject, useCallback, useState } from \"react\";\r\nimport { ObjectSchema, ValidationError } from \"yup\";\r\n\r\ntype Hook = <T>(\r\n  args: Props<T>\r\n) => {\r\n  validating: boolean;\r\n  handleSubmit: SubmitHandler<T>;\r\n};\r\n\r\ninterface Props<T> {\r\n  formRef: RefObject<FormHandles>;\r\n  schema: ObjectSchema<any>;\r\n  onSuccess: (data: T) => void;\r\n}\r\n\r\nexport const useValidateForm: Hook = ({ formRef, schema, onSuccess }) => {\r\n  const [validating, setValidating] = useState(false);\r\n\r\n  const success = useCallback(onSuccess, []);\r\n\r\n  const handleSubmit = useCallback(\r\n    async (data) => {\r\n      formRef?.current?.setErrors({});\r\n      try {\r\n        setValidating(true);\r\n        const _data: any = await schema.validate(data, { abortEarly: false });\r\n        success(_data);\r\n      } catch (err) {\r\n        console.log(\"err :>> \", err);\r\n\r\n        const validationErrors: any = {};\r\n\r\n        if (err instanceof ValidationError) {\r\n          err.inner.forEach((error) => {\r\n            error.path && (validationErrors[error.path] = error.message);\r\n          });\r\n\r\n          formRef?.current?.setErrors(validationErrors);\r\n        }\r\n      } finally {\r\n        setValidating(false);\r\n      }\r\n    },\r\n    [formRef, schema, success]\r\n  );\r\n\r\n  return {\r\n    handleSubmit,\r\n    validating,\r\n  };\r\n};\r\n","/home/joshua/Documentos/protrack_front/src/views/management/project/new/index.tsx",[],"/home/joshua/Documentos/protrack_front/src/configs/toastConfig.ts",[],"/home/joshua/Documentos/protrack_front/src/views/management/project/edit/index.tsx",[],"/home/joshua/Documentos/protrack_front/src/views/management/contributor/edit/index.tsx",[],"/home/joshua/Documentos/protrack_front/src/views/management/contributor/form/index.tsx",[],"/home/joshua/Documentos/protrack_front/src/views/management/contributor/form/schema.ts",[],"/home/joshua/Documentos/protrack_front/src/views/management/projectContributors/index.tsx",["267","268"],"import {\n  faChevronLeft,\n  faChevronRight,\n  faUsers,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { Button, CardBody, CardHeader, Col, Row } from \"reactstrap\";\nimport { Header } from \"../../../components/header\";\nimport { Loading } from \"../../../components/loading\";\nimport Search from \"../../../components/search\";\nimport { Shortlist, ShortlistProps } from \"../../../components/shortlist\";\nimport {\n  useAddProjectContributorsMutation,\n  useAllContributorsAndContributorsByProjectLazyQuery,\n  useProjectLazyQuery,\n  useRemoveProjectContributorsMutation,\n} from \"../../../generated/hooks\";\nimport { Project } from \"../../../generated/schemas\";\nimport { CustomCard } from \"../../../styles/global\";\nimport { Styles } from \"./styles\";\n\nexport const ProjectContributors = () => {\n  const [title, setTitle] = useState<string>(\"\");\n  const [currentProject, setCurrentProject] = useState<Partial<Project>>();\n  const [leftFilter, setLeftFilter] = useState();\n  const [rightFilter, setRightFilter] = useState();\n  const [lists, setLists] = useState<any[]>([[], []]);\n\n  const { state } = useLocation();\n  const { projectId } = useParams();\n\n  const listLRef = useRef<ShortlistProps>(null);\n  const listRRef = useRef<ShortlistProps>(null);\n\n  const [\n    getAllContributors,\n    { loading: loadingContributors },\n  ] = useAllContributorsAndContributorsByProjectLazyQuery({\n    onCompleted: ({ contributors, project_contributors }) => {\n      const pcIds = project_contributors.map(({ id }) => id);\n\n      setLists([\n        contributors.filter(({ id }) => !pcIds.includes(id)),\n        project_contributors,\n      ]);\n    },\n  });\n\n  const [getProject, { loading: loadingProject }] = useProjectLazyQuery({\n    onCompleted: ({ project }) => setCurrentProject(project),\n  });\n\n  const [\n    addContributors,\n    { loading: loadingAdd },\n  ] = useAddProjectContributorsMutation({\n    onCompleted: ({ add_contributors }) => {\n      if (add_contributors) {\n        const contributors = listRRef.current!.getSelecteds();\n        const ids = contributors.map(({ id }) => id);\n\n        setLists((prev) => {\n          prev[0] = prev[0].filter(({ id }: any) => !ids.includes(id));\n          prev[1] = [...prev[1], ...contributors];\n          return [...prev];\n        });\n        toast.success(\"Ação Realizada!\");\n      }\n    },\n    onError: () => toast.error(\"Ação não Realizada!\"),\n  });\n\n  const [\n    removeContributors,\n    { loading: loadingRemove },\n  ] = useRemoveProjectContributorsMutation({\n    onCompleted: ({ remove_contributors }) => {\n      if (remove_contributors) {\n        const contributors = listLRef.current!.getSelecteds();\n        const ids = contributors.map(({ id }) => id);\n\n        setLists((prev) => {\n          prev[0] = [...prev[0], ...contributors];\n          prev[1] = prev[1].filter(({ id }: any) => !ids.includes(id));\n          return [...prev];\n        });\n        toast.success(\"Ação Realizada!\");\n      }\n    },\n    onError: () => toast.error(\"Ação não Realizada!\"),\n  });\n\n  useEffect(() => {\n    if (!state) getProject({ variables: { id: +projectId } });\n    else setCurrentProject((state as any).project);\n  }, [state]);\n\n  useEffect(() => {\n    if (currentProject) {\n      setTitle(`COLABORADORES | ${currentProject.name}`);\n      getAllContributors({ variables: { id: currentProject.id as number } });\n    }\n  }, [currentProject]);\n\n  const add = () => {\n    const ids: number[] = listRRef.current!.getSelecteds().map(({ id }) => id);\n\n    if (ids.length)\n      addContributors({\n        variables: {\n          projectId: +projectId,\n          contributorIds: ids,\n        },\n      });\n  };\n\n  const remove = () => {\n    const ids: number[] = listLRef.current!.getSelecteds().map(({ id }) => id);\n\n    if (ids.length)\n      removeContributors({\n        variables: {\n          projectId: +projectId,\n          contributorIds: ids,\n        },\n      });\n  };\n\n  return (\n    <Styles>\n      <Header icon={faUsers} title={title}></Header>\n\n      <Row className=\"flex-grow-1\">\n        <Col md={5}>\n          <CustomCard className=\"h-100\">\n            <CardHeader tag=\"h5\">\n              <p>Todos Colaboradores</p>\n              <Search onSearch={setLeftFilter} />\n            </CardHeader>\n            <CardBody>\n              <Shortlist\n                ref={listRRef}\n                itemSize={50}\n                list={lists[0]}\n                labelKey=\"full_name\"\n                filter={leftFilter}\n              />\n            </CardBody>\n          </CustomCard>\n        </Col>\n\n        <Col md={2} className=\"d-flex flex-column justify-content-center\">\n          <Loading\n            loading={\n              loadingContributors ||\n              loadingProject ||\n              loadingAdd ||\n              loadingRemove\n            }\n          >\n            <div className=\"d-flex flex-column justify-content-center\">\n              <Button color=\"primary\" className=\"mb-2\" onClick={add}>\n                Adicionar ao Projeto <FontAwesomeIcon icon={faChevronRight} />\n              </Button>\n              <Button color=\"primary\" onClick={remove}>\n                <FontAwesomeIcon icon={faChevronLeft} /> Remover do Projeto\n              </Button>\n            </div>\n          </Loading>\n        </Col>\n\n        <Col md={5}>\n          <CustomCard className=\"h-100\">\n            <CardHeader tag=\"h5\">\n              <p>Colaboradores Alocados</p>\n              <Search onSearch={setRightFilter} />\n            </CardHeader>\n            <CardBody>\n              <Shortlist\n                ref={listLRef}\n                itemSize={50}\n                list={lists[1]}\n                labelKey=\"full_name\"\n                filter={rightFilter}\n              />\n            </CardBody>\n          </CustomCard>\n        </Col>\n      </Row>\n    </Styles>\n  );\n};\n","/home/joshua/Documentos/protrack_front/src/views/management/projectContributors/styles.ts",[],"/home/joshua/Documentos/protrack_front/src/components/search.tsx",[],"/home/joshua/Documentos/protrack_front/src/components/shortlist/index.tsx",["269"],"import memoize from \"memoize-one\";\nimport {\n  ComponentType,\n  ElementRef,\n  FC,\n  forwardRef,\n  memo,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport {\n  areEqual,\n  FixedSizeList as List,\n  FixedSizeListProps,\n  ListChildComponentProps,\n} from \"react-window\";\nimport { CustomInput, ListGroup, ListGroupItem } from \"reactstrap\";\nimport { time } from \"uniqid\";\nimport { normalize } from \"../../helpers/string\";\nimport { CustomScrollbarsPanel } from \"./customScrollbarsPanel\";\nimport { CustomScrollbarsVirtualList } from \"./customScrollbarsVirtualList\";\nimport { Styles } from \"./styles\";\n\ninterface Props extends Partial<FixedSizeListProps> {\n  list: any[];\n  labelKey?: string;\n  filter?: string;\n}\n\nexport interface IListItem {\n  value: any;\n  selected: boolean;\n  index: number;\n}\n\ntype FRType = {\n  getSelecteds: () => any[];\n};\n\nexport type ShortlistProps = ElementRef<typeof Shortlist>;\n\nexport const Shortlist = forwardRef<FRType, Props>(\n  ({ list, labelKey, filter, ...props }, ref) => {\n    const listRef = useRef<any>();\n    const outerRef = useRef<Scrollbars>();\n\n    const [items, setItems] = useState<IListItem[]>([]);\n\n    useImperativeHandle(ref, () => ({\n      getSelecteds: () =>\n        items.filter(({ selected }) => selected).map(({ value }) => value),\n    }));\n\n    useEffect(\n      () =>\n        setItems(\n          list.map((i, index) => ({ index, value: i, selected: false }))\n        ),\n      [list]\n    );\n\n    const toggleItemSelect = (index: number) =>\n      setItems((prev) => {\n        const item = prev[index];\n        const items = [...prev];\n        items[index] = { ...item, selected: !item.selected };\n        return items;\n      });\n\n    const ListGroupWrapper: FC = ({ children, ...props }) => (\n      <ListGroup flush {...props}>\n        {children}\n      </ListGroup>\n    );\n\n    const Row: ComponentType<ListChildComponentProps> = memo(\n      ({ data, index, style }) => {\n        const { items, toggleItemSelect } = data;\n        const item = items[index];\n\n        return (\n          <ListGroupItem\n            action\n            tag=\"button\"\n            active={item.selected}\n            onClick={() => toggleItemSelect(item.index)}\n            style={{ ...style, zIndex: 0 }}\n          >\n            <CustomInput\n              id={time()}\n              type=\"checkbox\"\n              label={String(labelKey ? item.value[labelKey] : item.value)}\n              checked={item.selected}\n              readOnly\n            />\n          </ListGroupItem>\n        );\n      },\n      areEqual\n    );\n\n    const createItemData = memoize((items, toggleItemSelect) => ({\n      items,\n      toggleItemSelect,\n    }));\n\n    const itemData = createItemData(items, toggleItemSelect);\n\n    const data = useMemo(() => {\n      if (!filter) return itemData;\n\n      const value = normalize(filter);\n\n      return Object.assign(itemData, {\n        items: itemData.items.filter((i: any) =>\n          normalize(labelKey ? i.value[labelKey] : i.value).includes(value)\n        ),\n      });\n    }, [itemData, filter]);\n\n    return (\n      <Styles>\n        <CustomScrollbarsPanel items={items} change={setItems} />\n        <AutoSizer>\n          {({ height, width }) => (\n            <List\n              ref={listRef}\n              className=\"List\"\n              outerElementType={CustomScrollbarsVirtualList}\n              outerRef={outerRef}\n              innerElementType={ListGroupWrapper}\n              height={height - 24}\n              width={width}\n              itemData={data}\n              itemCount={data.items.length}\n              itemSize={50}\n              {...props}\n            >\n              {Row}\n            </List>\n          )}\n        </AutoSizer>\n      </Styles>\n    );\n  }\n);\n","/home/joshua/Documentos/protrack_front/src/components/shortlist/styles.ts",[],"/home/joshua/Documentos/protrack_front/src/components/shortlist/customScrollbarsVirtualList.tsx",[],"/home/joshua/Documentos/protrack_front/src/components/shortlist/customScrollbars.tsx",[],"/home/joshua/Documentos/protrack_front/src/components/shortlist/customScrollbarsPanel.tsx",["270"],"import {\n  ChangeEvent,\n  Dispatch,\n  FC,\n  SetStateAction,\n  useEffect,\n  useMemo,\n  useRef,\n} from \"react\";\nimport { CustomInput } from \"reactstrap\";\nimport { time } from \"uniqid\";\nimport { IListItem } from \".\";\n\ninterface Props {\n  items: IListItem[];\n  change: Dispatch<SetStateAction<IListItem[]>>;\n}\n\nexport const CustomScrollbarsPanel: FC<Props> = ({ items, change }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const checkboxHandle = (event: ChangeEvent<HTMLInputElement>) => {\n    change((prev) =>\n      prev.map((e) => ({ ...e, selected: event.target.checked }))\n    );\n  };\n\n  const selecteds = useMemo(() => items.filter((e) => e.selected).length, [\n    items,\n  ]);\n\n  useEffect(() => {\n    if (selecteds > 0 && selecteds < items.length)\n      inputRef.current!.indeterminate = true;\n    else {\n      inputRef.current!.indeterminate = false;\n      if (!selecteds) inputRef.current!.checked = false;\n      else inputRef.current!.checked = true;\n    }\n  }, [items]);\n\n  return (\n    <div className=\"panel d-flex justify-content-between mb-1\">\n      <CustomInput\n        className=\"text-muted\"\n        id={time()}\n        type=\"checkbox\"\n        label={`${selecteds} Selecionado(s)`}\n        onChange={checkboxHandle}\n        innerRef={inputRef}\n      />\n    </div>\n  );\n};\n","/home/joshua/Documentos/protrack_front/src/helpers/string.ts",[],"/home/joshua/Documentos/protrack_front/src/generated/schemas.tsx",[],{"ruleId":"271","replacedBy":"272"},{"ruleId":"273","replacedBy":"274"},{"ruleId":"275","severity":1,"message":"276","line":51,"column":5,"nodeType":"277","endLine":51,"endColumn":11,"suggestions":"278"},{"ruleId":"271","replacedBy":"279"},{"ruleId":"273","replacedBy":"280"},{"ruleId":"275","severity":1,"message":"281","line":62,"column":6,"nodeType":"277","endLine":62,"endColumn":22,"suggestions":"282"},{"ruleId":"283","severity":1,"message":"284","line":1,"column":29,"nodeType":"285","messageId":"286","endLine":1,"endColumn":53},{"ruleId":"275","severity":1,"message":"287","line":21,"column":19,"nodeType":"285","endLine":21,"endColumn":30,"suggestions":"288"},{"ruleId":"275","severity":1,"message":"289","line":99,"column":6,"nodeType":"277","endLine":99,"endColumn":13,"suggestions":"290"},{"ruleId":"275","severity":1,"message":"291","line":106,"column":6,"nodeType":"277","endLine":106,"endColumn":22,"suggestions":"292"},{"ruleId":"275","severity":1,"message":"293","line":124,"column":8,"nodeType":"277","endLine":124,"endColumn":26,"suggestions":"294"},{"ruleId":"275","severity":1,"message":"295","line":40,"column":6,"nodeType":"277","endLine":40,"endColumn":13,"suggestions":"296"},"no-native-reassign",["297"],"no-negated-in-lhs",["298"],"react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["299"],["297"],["298"],"React Hook useEffect has a missing dependency: 'getProtracks'. Either include it or remove the dependency array.",["300"],"@typescript-eslint/no-unused-vars","'ForwardRefRenderFunction' is defined but never used.","Identifier","unusedVar","React Hook useCallback has a missing dependency: 'onSuccess'. Either include it or remove the dependency array.",["301"],"React Hook useEffect has missing dependencies: 'getProject' and 'projectId'. Either include them or remove the dependency array.",["302"],"React Hook useEffect has a missing dependency: 'getAllContributors'. Either include it or remove the dependency array.",["303"],"React Hook useMemo has a missing dependency: 'labelKey'. Either include it or remove the dependency array.",["304"],"React Hook useEffect has a missing dependency: 'selecteds'. Either include it or remove the dependency array.",["305"],"no-global-assign","no-unsafe-negation",{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},"Update the dependencies array to be: [data?.projects, navigate]",{"range":"320","text":"321"},"Update the dependencies array to be: [currentProject, getProtracks]",{"range":"322","text":"323"},"Update the dependencies array to be: [onSuccess]",{"range":"324","text":"325"},"Update the dependencies array to be: [getProject, projectId, state]",{"range":"326","text":"327"},"Update the dependencies array to be: [currentProject, getAllContributors]",{"range":"328","text":"329"},"Update the dependencies array to be: [filter, itemData, labelKey]",{"range":"330","text":"331"},"Update the dependencies array to be: [items, selecteds]",{"range":"332","text":"333"},[1807,1813],"[data?.projects, navigate]",[2085,2101],"[currentProject, getProtracks]",[585,587],"[onSuccess]",[3367,3374],"[getProject, projectId, state]",[3571,3587],"[currentProject, getAllContributors]",[3166,3184],"[filter, itemData, labelKey]",[983,990],"[items, selecteds]"]