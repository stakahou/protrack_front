[{"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\index.tsx":"1","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\reportWebVitals.ts":"2","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\providers\\contextProviderComposer.ts":"3","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\styles\\global.tsx":"4","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\providers\\index.tsx":"5","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\routes\\index.tsx":"6","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\configs\\toastConfig.ts":"7","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\configs\\graphqlConfig.ts":"8","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\styles\\themes\\default.ts":"9","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\layouts\\managementLayout\\index.tsx":"10","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\layouts\\contributorLayout\\index.tsx":"11","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\login\\index.tsx":"12","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\contributor\\project\\index.tsx":"13","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\management\\contributor\\index.tsx":"14","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\management\\protrack\\index.tsx":"15","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\management\\project\\index.tsx":"16","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\management\\projectContributors\\index.tsx":"17","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\layouts\\managementLayout\\styles.ts":"18","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\layouts\\contributorLayout\\styles.ts":"19","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\management\\projectContributors\\styles.ts":"20","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\management\\contributor\\styles.ts":"21","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\management\\project\\styles.ts":"22","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\management\\protrack\\styles.ts":"23","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\login\\styles.ts":"24","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\contributor\\project\\styles.ts":"25","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\shared\\enums.ts":"26","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\helpers\\assets.ts":"27","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\management\\contributor\\columns.tsx":"28","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\management\\project\\columns.tsx":"29","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\generated\\hooks.tsx":"30","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\components\\loading.tsx":"31","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\components\\search.tsx":"32","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\components\\reactSelect.tsx":"33","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\management\\protrack\\components\\contributorProtacks.tsx":"34","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\hooks\\useStores.tsx":"35","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\hooks\\useLocalStorage.tsx":"36","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\contributor\\project\\columns.tsx":"37","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\layouts\\navBar\\index.tsx":"38","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\management\\project\\edit\\index.tsx":"39","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\management\\project\\new\\index.tsx":"40","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\management\\contributor\\edit\\index.tsx":"41","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\components\\table\\index.tsx":"42","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\components\\shortlist\\index.tsx":"43","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\components\\header\\index.tsx":"44","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\components\\tableActions.tsx":"45","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\hooks\\useStorage.tsx":"46","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\layouts\\navBar\\styles.ts":"47","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\components\\table\\style.ts":"48","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\components\\header\\styles.ts":"49","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\components\\shortlist\\styles.ts":"50","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\helpers\\string.ts":"51","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\stores\\index.ts":"52","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\hooks\\useDocumentTitle.tsx":"53","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\components\\shortlist\\customScrollbarsVirtualList.tsx":"54","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\components\\shortlist\\customScrollbarsPanel.tsx":"55","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\components\\table\\utils.tsx":"56","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\stores\\sessionStore.ts":"57","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\components\\modal\\index.tsx":"58","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\management\\project\\form\\index.tsx":"59","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\management\\contributor\\form\\index.tsx":"60","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\components\\shortlist\\customScrollbars.tsx":"61","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\management\\contributor\\form\\schema.ts":"62","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\hooks\\useValidateForm.tsx":"63","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\management\\project\\form\\schema.ts":"64","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\components\\modal\\styles.ts":"65","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\components\\inputForm.tsx":"66","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\contributor\\protrack\\index.tsx":"67","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\contributor\\protrack\\styles.ts":"68","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\contributor\\protrack\\form\\index.tsx":"69","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\contributor\\protrack\\form\\schema.ts":"70"},{"size":999,"mtime":1611700284000,"results":"71","hashOfConfig":"72"},{"size":425,"mtime":1610652760000,"results":"73","hashOfConfig":"72"},{"size":419,"mtime":1610672520000,"results":"74","hashOfConfig":"72"},{"size":2001,"mtime":1611800744000,"results":"75","hashOfConfig":"72"},{"size":402,"mtime":1611279524000,"results":"76","hashOfConfig":"72"},{"size":1442,"mtime":1612900824513,"results":"77","hashOfConfig":"72"},{"size":192,"mtime":1611700202000,"results":"78","hashOfConfig":"72"},{"size":1352,"mtime":1611279382000,"results":"79","hashOfConfig":"72"},{"size":341,"mtime":1610665616000,"results":"80","hashOfConfig":"72"},{"size":734,"mtime":1612414384000,"results":"81","hashOfConfig":"72"},{"size":505,"mtime":1612926855885,"results":"82","hashOfConfig":"72"},{"size":2395,"mtime":1611548120000,"results":"83","hashOfConfig":"72"},{"size":1518,"mtime":1612917743371,"results":"84","hashOfConfig":"72"},{"size":1585,"mtime":1612494700000,"results":"85","hashOfConfig":"72"},{"size":3158,"mtime":1612835738000,"results":"86","hashOfConfig":"72"},{"size":2610,"mtime":1611929654000,"results":"87","hashOfConfig":"72"},{"size":6018,"mtime":1612330144000,"results":"88","hashOfConfig":"72"},{"size":141,"mtime":1611806556000,"results":"89","hashOfConfig":"72"},{"size":141,"mtime":1612887804000,"results":"90","hashOfConfig":"72"},{"size":132,"mtime":1611806322000,"results":"91","hashOfConfig":"72"},{"size":77,"mtime":1610722064000,"results":"92","hashOfConfig":"72"},{"size":77,"mtime":1610716890000,"results":"93","hashOfConfig":"72"},{"size":77,"mtime":1610724010000,"results":"94","hashOfConfig":"72"},{"size":1927,"mtime":1610714124000,"results":"95","hashOfConfig":"72"},{"size":124,"mtime":1612896874000,"results":"96","hashOfConfig":"72"},{"size":85,"mtime":1611536264000,"results":"97","hashOfConfig":"72"},{"size":118,"mtime":1610666088000,"results":"98","hashOfConfig":"72"},{"size":902,"mtime":1612494742000,"results":"99","hashOfConfig":"72"},{"size":981,"mtime":1611616952000,"results":"100","hashOfConfig":"72"},{"size":23907,"mtime":1612755444000,"results":"101","hashOfConfig":"72"},{"size":974,"mtime":1612149390000,"results":"102","hashOfConfig":"72"},{"size":1868,"mtime":1611808570000,"results":"103","hashOfConfig":"72"},{"size":1278,"mtime":1610718570000,"results":"104","hashOfConfig":"72"},{"size":1202,"mtime":1612578660000,"results":"105","hashOfConfig":"72"},{"size":142,"mtime":1611537874000,"results":"106","hashOfConfig":"72"},{"size":207,"mtime":1611535594000,"results":"107","hashOfConfig":"72"},{"size":981,"mtime":1612888002000,"results":"108","hashOfConfig":"72"},{"size":2040,"mtime":1611539294000,"results":"109","hashOfConfig":"72"},{"size":2077,"mtime":1611711074000,"results":"110","hashOfConfig":"72"},{"size":1881,"mtime":1611710948000,"results":"111","hashOfConfig":"72"},{"size":2183,"mtime":1612157108000,"results":"112","hashOfConfig":"72"},{"size":5613,"mtime":1611705252000,"results":"113","hashOfConfig":"72"},{"size":3868,"mtime":1612329666000,"results":"114","hashOfConfig":"72"},{"size":833,"mtime":1610718160000,"results":"115","hashOfConfig":"72"},{"size":1195,"mtime":1610721036000,"results":"116","hashOfConfig":"72"},{"size":843,"mtime":1611535594000,"results":"117","hashOfConfig":"72"},{"size":77,"mtime":1610673090000,"results":"118","hashOfConfig":"72"},{"size":247,"mtime":1610718180000,"results":"119","hashOfConfig":"72"},{"size":186,"mtime":1610717420000,"results":"120","hashOfConfig":"72"},{"size":134,"mtime":1612142808000,"results":"121","hashOfConfig":"72"},{"size":136,"mtime":1612137268000,"results":"122","hashOfConfig":"72"},{"size":172,"mtime":1611538716000,"results":"123","hashOfConfig":"72"},{"size":207,"mtime":1610717458000,"results":"124","hashOfConfig":"72"},{"size":281,"mtime":1612024198000,"results":"125","hashOfConfig":"72"},{"size":1299,"mtime":1612329652000,"results":"126","hashOfConfig":"72"},{"size":1174,"mtime":1610718180000,"results":"127","hashOfConfig":"72"},{"size":430,"mtime":1611537926000,"results":"128","hashOfConfig":"72"},{"size":1172,"mtime":1611929632000,"results":"129","hashOfConfig":"72"},{"size":1003,"mtime":1611620750000,"results":"130","hashOfConfig":"72"},{"size":1476,"mtime":1611719406000,"results":"131","hashOfConfig":"72"},{"size":410,"mtime":1612144340000,"results":"132","hashOfConfig":"72"},{"size":231,"mtime":1611719356000,"results":"133","hashOfConfig":"72"},{"size":1365,"mtime":1611619840000,"results":"134","hashOfConfig":"72"},{"size":147,"mtime":1611620748000,"results":"135","hashOfConfig":"72"},{"size":116,"mtime":1611540348000,"results":"136","hashOfConfig":"72"},{"size":974,"mtime":1611620782000,"results":"137","hashOfConfig":"72"},{"size":1879,"mtime":1612927190389,"results":"138","hashOfConfig":"72"},{"size":77,"mtime":1612900851019,"results":"139","hashOfConfig":"72"},{"size":3144,"mtime":1612926635900,"results":"140","hashOfConfig":"72"},{"size":257,"mtime":1612925711805,"results":"141","hashOfConfig":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},"100cgie",{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"144"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"144"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"144"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"144"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"144"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"144"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"144"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"144"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\index.tsx",[],["291","292"],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\reportWebVitals.ts",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\providers\\contextProviderComposer.ts",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\styles\\global.tsx",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\providers\\index.tsx",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\routes\\index.tsx",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\configs\\toastConfig.ts",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\configs\\graphqlConfig.ts",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\styles\\themes\\default.ts",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\layouts\\managementLayout\\index.tsx",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\layouts\\contributorLayout\\index.tsx",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\login\\index.tsx",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\contributor\\project\\index.tsx",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\management\\contributor\\index.tsx",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\management\\protrack\\index.tsx",["293"],"import { faTasks } from \"@fortawesome/free-solid-svg-icons\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { OptionTypeBase } from \"react-select\";\nimport { CardBody } from \"reactstrap\";\nimport { Header } from \"../../../components/header\";\nimport { Loading } from \"../../../components/loading\";\nimport { ReactSelect } from \"../../../components/reactSelect\";\nimport {\n  OnProtrackAddedDocument,\n  useAllContributorsProtracksByProjectLazyQuery,\n  useProjectsQuery,\n} from \"../../../generated/hooks\";\nimport { CustomCard } from \"../../../styles/global\";\nimport { ContributorProtacks } from \"./components/contributorProtacks\";\nimport { Styles } from \"./styles\";\n\nexport const Protrack = () => {\n  const [currentProject, setCurrentProject] = useState<OptionTypeBase>();\n\n  const { data, loading: projectsLoading } = useProjectsQuery();\n\n  const [\n    getProtracks,\n    { loading, data: protracks, subscribeToMore },\n  ] = useAllContributorsProtracksByProjectLazyQuery({\n    fetchPolicy: \"cache-and-network\",\n  });\n\n  useEffect(() => {\n    let unsubscribe: any;\n\n    if (subscribeToMore && currentProject && !loading) {\n      unsubscribe = subscribeToMore({\n        document: OnProtrackAddedDocument,\n        variables: { projectId: currentProject.value },\n        updateQuery: (prev, { subscriptionData }: any) => {\n          if (!subscriptionData.data?.protrackAdded) return prev;\n\n          const { user, ...protrack } = subscriptionData.data.protrackAdded;\n\n          return Object.assign({}, prev, {\n            project_contributors: [\n              ...prev.project_contributors.map((c) => {\n                if (c.id === user.id)\n                  return { ...c, protracks: [...c.protracks, protrack] };\n                return c;\n              }),\n            ],\n          });\n        },\n      });\n    }\n\n    return () => {\n      unsubscribe && unsubscribe();\n    };\n  }, [subscribeToMore, currentProject, loading]);\n\n  useEffect(() => {\n    if (currentProject) {\n      getProtracks({ variables: { id: currentProject.value } });\n    }\n  }, [currentProject]);\n\n  const options = useMemo<OptionTypeBase[]>(\n    () =>\n      (data?.projects ?? [])\n        .map(({ id, name }) => ({\n          value: id,\n          label: name,\n        }))\n        .sort((a: any, b: any) => b.label - a.label),\n    [data]\n  );\n\n  const ProtracksCard = useMemo(\n    () =>\n      protracks?.project_contributors.map((protrack) => {\n        return (\n          <CustomCard className=\"mb-3\" key={protrack.id}>\n            <CardBody>\n              <ContributorProtacks protrack={protrack} />\n            </CardBody>\n          </CustomCard>\n        );\n      }),\n    [protracks]\n  );\n\n  return (\n    <Styles>\n      <Header icon={faTasks} title=\"PROTRACKS\"></Header>\n\n      <ReactSelect\n        isLoading={projectsLoading}\n        options={options}\n        placeholder=\"Selecione um Projeto\"\n        className=\"react-select-container mb-5\"\n        classNamePrefix=\"react-select\"\n        onChange={setCurrentProject}\n      />\n\n      <Loading loading={loading}>\n        <p className=\"h5 text-muted\">Colaboradores</p>\n        {ProtracksCard}\n      </Loading>\n    </Styles>\n  );\n};\n","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\management\\project\\index.tsx",["294"],"import { faPlus, faProjectDiagram } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useMemo, useRef, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button, CardBody } from \"reactstrap\";\nimport { Header } from \"../../../components/header\";\nimport { Loading } from \"../../../components/loading\";\nimport { CustomModalProps } from \"../../../components/modal\";\nimport ReactTable from \"../../../components/table\";\nimport { useProjectsQuery } from \"../../../generated/hooks\";\nimport { Project as IProject } from \"../../../generated/schemas\";\nimport { CustomCard } from \"../../../styles/global\";\nimport columns from \"./columns\";\nimport { EditProject } from \"./edit\";\nimport { NewProject } from \"./new\";\nimport { Styles } from \"./styles\";\n\nexport const Project = () => {\n  const modalNewRef = useRef<CustomModalProps>(null);\n\n  const modalEditRef = useRef<CustomModalProps>(null);\n\n  const [selectedProjet, setSelectedProjet] = useState<IProject>();\n\n  const navigate = useNavigate();\n\n  const { data, loading, refetch } = useProjectsQuery({\n    fetchPolicy: \"no-cache\",\n  });\n\n  const projects = useMemo(\n    () =>\n      (data?.projects ?? [])\n        .map((p: any) => ({\n          ...p,\n          actions: {\n            edit: () => {\n              setSelectedProjet(p);\n              modalEditRef.current?.open();\n            },\n            members: () => {\n              navigate(`/management/projects/${p.id}/contributors`, {\n                state: { project: p },\n              });\n            },\n            // remove: () => console.log(\"remove :>> \", p.id),\n            // detail: () => console.log(\"detail :>> \", p.id),\n          },\n        }))\n        .sort((a, b) => a.name.localeCompare(b.name)),\n    [data]\n  );\n\n  return (\n    <Styles>\n      <Header icon={faProjectDiagram} title=\"PROJETOS\">\n        <div className=\"ml-auto\">\n          <Button\n            color=\"primary\"\n            className=\"shadow-sm\"\n            size=\"sm\"\n            onClick={() => modalNewRef.current?.open()}\n          >\n            <FontAwesomeIcon icon={faPlus} /> Novo\n          </Button>\n        </div>\n      </Header>\n\n      <CustomCard>\n        <CardBody>\n          <Loading loading={loading}>\n            <ReactTable columns={columns} data={projects} />\n          </Loading>\n        </CardBody>\n      </CustomCard>\n\n      <NewProject modalRef={modalNewRef} refetch={refetch} />\n\n      <EditProject\n        modalRef={modalEditRef}\n        project={selectedProjet}\n        refetch={refetch}\n      />\n    </Styles>\n  );\n};\n","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\management\\projectContributors\\index.tsx",["295","296"],"import {\n  faChevronLeft,\n  faChevronRight,\n  faUsers,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { Button, CardBody, CardHeader, Col, Row } from \"reactstrap\";\nimport { Header } from \"../../../components/header\";\nimport { Loading } from \"../../../components/loading\";\nimport Search from \"../../../components/search\";\nimport { Shortlist, ShortlistProps } from \"../../../components/shortlist\";\nimport {\n  useAddProjectContributorsMutation,\n  useAllContributorsAndContributorsByProjectLazyQuery,\n  useProjectLazyQuery,\n  useRemoveProjectContributorsMutation,\n} from \"../../../generated/hooks\";\nimport { Project } from \"../../../generated/schemas\";\nimport { CustomCard } from \"../../../styles/global\";\nimport { Styles } from \"./styles\";\n\nexport const ProjectContributors = () => {\n  const [title, setTitle] = useState<string>(\"\");\n  const [currentProject, setCurrentProject] = useState<Partial<Project>>();\n  const [leftFilter, setLeftFilter] = useState();\n  const [rightFilter, setRightFilter] = useState();\n  const [lists, setLists] = useState<any[]>([[], []]);\n\n  const { state } = useLocation();\n  const { projectId } = useParams();\n\n  const listLRef = useRef<ShortlistProps>(null);\n  const listRRef = useRef<ShortlistProps>(null);\n\n  const [\n    getAllContributors,\n    { loading: loadingContributors },\n  ] = useAllContributorsAndContributorsByProjectLazyQuery({\n    onCompleted: ({ contributors, project_contributors }) => {\n      const pcIds = project_contributors.map(({ id }) => id);\n\n      setLists([\n        contributors.filter(({ id }) => !pcIds.includes(id)),\n        project_contributors,\n      ]);\n    },\n  });\n\n  const [getProject, { loading: loadingProject }] = useProjectLazyQuery({\n    onCompleted: ({ project }) => setCurrentProject(project),\n  });\n\n  const [\n    addContributors,\n    { loading: loadingAdd },\n  ] = useAddProjectContributorsMutation({\n    onCompleted: ({ add_contributors }) => {\n      if (add_contributors) {\n        const contributors = listRRef.current!.getSelecteds();\n        const ids = contributors.map(({ id }) => id);\n\n        setLists((prev) => {\n          prev[0] = prev[0].filter(({ id }: any) => !ids.includes(id));\n          prev[1] = [...prev[1], ...contributors];\n          return [...prev];\n        });\n        toast.success(\"Ação Realizada!\");\n      }\n    },\n    onError: () => toast.error(\"Ação não Realizada!\"),\n  });\n\n  const [\n    removeContributors,\n    { loading: loadingRemove },\n  ] = useRemoveProjectContributorsMutation({\n    onCompleted: ({ remove_contributors }) => {\n      if (remove_contributors) {\n        const contributors = listLRef.current!.getSelecteds();\n        const ids = contributors.map(({ id }) => id);\n\n        setLists((prev) => {\n          prev[0] = [...prev[0], ...contributors];\n          prev[1] = prev[1].filter(({ id }: any) => !ids.includes(id));\n          return [...prev];\n        });\n        toast.success(\"Ação Realizada!\");\n      }\n    },\n    onError: () => toast.error(\"Ação não Realizada!\"),\n  });\n\n  useEffect(() => {\n    if (!state) getProject({ variables: { id: +projectId } });\n    else setCurrentProject((state as any).project);\n  }, [state]);\n\n  useEffect(() => {\n    if (currentProject) {\n      setTitle(`COLABORADORES | ${currentProject.name}`);\n      getAllContributors({ variables: { id: currentProject.id as number } });\n    }\n  }, [currentProject]);\n\n  const add = () => {\n    const ids: number[] = listRRef.current!.getSelecteds().map(({ id }) => id);\n\n    if (ids.length)\n      addContributors({\n        variables: {\n          projectId: +projectId,\n          contributorIds: ids,\n        },\n      });\n  };\n\n  const remove = () => {\n    const ids: number[] = listLRef.current!.getSelecteds().map(({ id }) => id);\n\n    if (ids.length)\n      removeContributors({\n        variables: {\n          projectId: +projectId,\n          contributorIds: ids,\n        },\n      });\n  };\n\n  return (\n    <Styles>\n      <Header icon={faUsers} title={title}></Header>\n\n      <Row className=\"flex-grow-1\">\n        <Col md={5}>\n          <CustomCard className=\"h-100\">\n            <CardHeader tag=\"h5\">\n              <p>Todos Colaboradores</p>\n              <Search onSearch={setLeftFilter} />\n            </CardHeader>\n            <CardBody>\n              <Shortlist\n                ref={listRRef}\n                itemSize={50}\n                list={lists[0]}\n                labelKey=\"full_name\"\n                filter={leftFilter}\n              />\n            </CardBody>\n          </CustomCard>\n        </Col>\n\n        <Col md={2} className=\"d-flex flex-column justify-content-center\">\n          <Loading\n            loading={\n              loadingContributors ||\n              loadingProject ||\n              loadingAdd ||\n              loadingRemove\n            }\n          >\n            <div className=\"d-flex flex-column justify-content-center\">\n              <Button color=\"primary\" className=\"mb-2\" onClick={add}>\n                Adicionar ao Projeto <FontAwesomeIcon icon={faChevronRight} />\n              </Button>\n              <Button color=\"primary\" onClick={remove}>\n                <FontAwesomeIcon icon={faChevronLeft} /> Remover do Projeto\n              </Button>\n            </div>\n          </Loading>\n        </Col>\n\n        <Col md={5}>\n          <CustomCard className=\"h-100\">\n            <CardHeader tag=\"h5\">\n              <p>Colaboradores Alocados</p>\n              <Search onSearch={setRightFilter} />\n            </CardHeader>\n            <CardBody>\n              <Shortlist\n                ref={listLRef}\n                itemSize={50}\n                list={lists[1]}\n                labelKey=\"full_name\"\n                filter={rightFilter}\n              />\n            </CardBody>\n          </CustomCard>\n        </Col>\n      </Row>\n    </Styles>\n  );\n};\n","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\layouts\\managementLayout\\styles.ts",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\layouts\\contributorLayout\\styles.ts",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\management\\projectContributors\\styles.ts",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\management\\contributor\\styles.ts",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\management\\project\\styles.ts",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\management\\protrack\\styles.ts",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\login\\styles.ts",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\contributor\\project\\styles.ts",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\shared\\enums.ts",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\helpers\\assets.ts",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\management\\contributor\\columns.tsx",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\management\\project\\columns.tsx",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\generated\\hooks.tsx",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\components\\loading.tsx",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\components\\search.tsx",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\components\\reactSelect.tsx",["297"],"import React, { forwardRef, ForwardRefRenderFunction, useContext } from \"react\";\r\nimport Select, { OptionTypeBase, Props as SelectProps } from \"react-select\";\r\nimport styled, { DefaultTheme, ThemeContext } from \"styled-components\";\r\n\r\nconst Styles = styled.div`\r\n  .react-select-container {\r\n    box-shadow: ${({ theme }) => theme.shadows.default} !important;\r\n\r\n    .react-select__control {\r\n      border: 0;\r\n    }\r\n\r\n    .react-select__menu {\r\n      .react-select__menu-list {\r\n        .react-select__option {\r\n          &.react-select__option--is-focused {\r\n            color: white;\r\n          }\r\n          :hover {\r\n            color: white;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ReactSelect = forwardRef<any, SelectProps<OptionTypeBase>>(\r\n  (props, ref) => {\r\n    const defaultTheme = useContext<DefaultTheme>(ThemeContext);\r\n\r\n    return (\r\n      <Styles>\r\n        <Select\r\n          ref={ref}\r\n          theme={(theme) => ({\r\n            ...theme,\r\n            borderRadius: 0,\r\n            colors: {\r\n              ...theme.colors,\r\n              primary25: defaultTheme.colors.primary,\r\n              primary: defaultTheme.colors.primary,\r\n            },\r\n          })}\r\n          {...props}\r\n        />\r\n      </Styles>\r\n    );\r\n  }\r\n);\r\n","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\management\\protrack\\components\\contributorProtacks.tsx",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\hooks\\useStores.tsx",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\hooks\\useLocalStorage.tsx",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\contributor\\project\\columns.tsx",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\layouts\\navBar\\index.tsx",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\management\\project\\edit\\index.tsx",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\management\\project\\new\\index.tsx",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\management\\contributor\\edit\\index.tsx",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\components\\table\\index.tsx",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\components\\shortlist\\index.tsx",["298"],"import memoize from \"memoize-one\";\nimport {\n  ComponentType,\n  ElementRef,\n  FC,\n  forwardRef,\n  memo,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport {\n  areEqual,\n  FixedSizeList as List,\n  FixedSizeListProps,\n  ListChildComponentProps,\n} from \"react-window\";\nimport { CustomInput, ListGroup, ListGroupItem } from \"reactstrap\";\nimport { time } from \"uniqid\";\nimport { normalize } from \"../../helpers/string\";\nimport { CustomScrollbarsPanel } from \"./customScrollbarsPanel\";\nimport { CustomScrollbarsVirtualList } from \"./customScrollbarsVirtualList\";\nimport { Styles } from \"./styles\";\n\ninterface Props extends Partial<FixedSizeListProps> {\n  list: any[];\n  labelKey?: string;\n  filter?: string;\n}\n\nexport interface IListItem {\n  value: any;\n  selected: boolean;\n  index: number;\n}\n\ntype FRType = {\n  getSelecteds: () => any[];\n};\n\nexport type ShortlistProps = ElementRef<typeof Shortlist>;\n\nexport const Shortlist = forwardRef<FRType, Props>(\n  ({ list, labelKey, filter, ...props }, ref) => {\n    const listRef = useRef<any>();\n    const outerRef = useRef<Scrollbars>();\n\n    const [items, setItems] = useState<IListItem[]>([]);\n\n    useImperativeHandle(ref, () => ({\n      getSelecteds: () =>\n        items.filter(({ selected }) => selected).map(({ value }) => value),\n    }));\n\n    useEffect(\n      () =>\n        setItems(\n          list.map((i, index) => ({ index, value: i, selected: false }))\n        ),\n      [list]\n    );\n\n    const toggleItemSelect = (index: number) =>\n      setItems((prev) => {\n        const item = prev[index];\n        const items = [...prev];\n        items[index] = { ...item, selected: !item.selected };\n        return items;\n      });\n\n    const ListGroupWrapper: FC = ({ children, ...props }) => (\n      <ListGroup flush {...props}>\n        {children}\n      </ListGroup>\n    );\n\n    const Row: ComponentType<ListChildComponentProps> = memo(\n      ({ data, index, style }) => {\n        const { items, toggleItemSelect } = data;\n        const item = items[index];\n\n        return (\n          <ListGroupItem\n            action\n            tag=\"button\"\n            active={item.selected}\n            onClick={() => toggleItemSelect(item.index)}\n            style={{ ...style, zIndex: 0 }}\n          >\n            <CustomInput\n              id={time()}\n              type=\"checkbox\"\n              label={String(labelKey ? item.value[labelKey] : item.value)}\n              checked={item.selected}\n              readOnly\n            />\n          </ListGroupItem>\n        );\n      },\n      areEqual\n    );\n\n    const createItemData = memoize((items, toggleItemSelect) => ({\n      items,\n      toggleItemSelect,\n    }));\n\n    const itemData = createItemData(items, toggleItemSelect);\n\n    const data = useMemo(() => {\n      if (!filter) return itemData;\n\n      const value = normalize(filter);\n\n      return Object.assign(itemData, {\n        items: itemData.items.filter((i: any) =>\n          normalize(labelKey ? i.value[labelKey] : i.value).includes(value)\n        ),\n      });\n    }, [itemData, filter]);\n\n    return (\n      <Styles>\n        <CustomScrollbarsPanel items={items} change={setItems} />\n        <AutoSizer>\n          {({ height, width }) => (\n            <List\n              ref={listRef}\n              className=\"List\"\n              outerElementType={CustomScrollbarsVirtualList}\n              outerRef={outerRef}\n              innerElementType={ListGroupWrapper}\n              height={height - 24}\n              width={width}\n              itemData={data}\n              itemCount={data.items.length}\n              itemSize={50}\n              {...props}\n            >\n              {Row}\n            </List>\n          )}\n        </AutoSizer>\n      </Styles>\n    );\n  }\n);\n","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\components\\header\\index.tsx",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\components\\tableActions.tsx",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\hooks\\useStorage.tsx",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\layouts\\navBar\\styles.ts",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\components\\table\\style.ts",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\components\\header\\styles.ts",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\components\\shortlist\\styles.ts",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\helpers\\string.ts",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\stores\\index.ts",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\hooks\\useDocumentTitle.tsx",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\components\\shortlist\\customScrollbarsVirtualList.tsx",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\components\\shortlist\\customScrollbarsPanel.tsx",["299"],"import {\n  ChangeEvent,\n  Dispatch,\n  FC,\n  SetStateAction,\n  useEffect,\n  useMemo,\n  useRef,\n} from \"react\";\nimport { CustomInput } from \"reactstrap\";\nimport { time } from \"uniqid\";\nimport { IListItem } from \".\";\n\ninterface Props {\n  items: IListItem[];\n  change: Dispatch<SetStateAction<IListItem[]>>;\n}\n\nexport const CustomScrollbarsPanel: FC<Props> = ({ items, change }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const checkboxHandle = (event: ChangeEvent<HTMLInputElement>) => {\n    change((prev) =>\n      prev.map((e) => ({ ...e, selected: event.target.checked }))\n    );\n  };\n\n  const selecteds = useMemo(() => items.filter((e) => e.selected).length, [\n    items,\n  ]);\n\n  useEffect(() => {\n    if (selecteds > 0 && selecteds < items.length)\n      inputRef.current!.indeterminate = true;\n    else {\n      inputRef.current!.indeterminate = false;\n      if (!selecteds) inputRef.current!.checked = false;\n      else inputRef.current!.checked = true;\n    }\n  }, [items]);\n\n  return (\n    <div className=\"panel d-flex justify-content-between mb-1\">\n      <CustomInput\n        className=\"text-muted\"\n        id={time()}\n        type=\"checkbox\"\n        label={`${selecteds} Selecionado(s)`}\n        onChange={checkboxHandle}\n        innerRef={inputRef}\n      />\n    </div>\n  );\n};\n","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\components\\table\\utils.tsx",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\stores\\sessionStore.ts",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\components\\modal\\index.tsx",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\management\\project\\form\\index.tsx",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\management\\contributor\\form\\index.tsx",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\components\\shortlist\\customScrollbars.tsx",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\management\\contributor\\form\\schema.ts",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\hooks\\useValidateForm.tsx",["300"],"import { FormHandles, SubmitHandler } from \"@unform/core\";\r\nimport { RefObject, useCallback, useState } from \"react\";\r\nimport { ObjectSchema, ValidationError } from \"yup\";\r\n\r\ntype Hook = <T>(\r\n  args: Props<T>\r\n) => {\r\n  validating: boolean;\r\n  handleSubmit: SubmitHandler<T>;\r\n};\r\n\r\ninterface Props<T> {\r\n  formRef: RefObject<FormHandles>;\r\n  schema: ObjectSchema<any>;\r\n  onSuccess: (data: T) => void;\r\n}\r\n\r\nexport const useValidateForm: Hook = ({ formRef, schema, onSuccess }) => {\r\n  const [validating, setValidating] = useState(false);\r\n\r\n  const success = useCallback(onSuccess, []);\r\n\r\n  const handleSubmit = useCallback(\r\n    async (data) => {\r\n      formRef?.current?.setErrors({});\r\n      try {\r\n        setValidating(true);\r\n        const _data: any = await schema.validate(data, { abortEarly: false });\r\n        success(_data);\r\n      } catch (err) {\r\n        console.log(\"err :>> \", err);\r\n\r\n        const validationErrors: any = {};\r\n\r\n        if (err instanceof ValidationError) {\r\n          err.inner.forEach((error) => {\r\n            error.path && (validationErrors[error.path] = error.message);\r\n          });\r\n\r\n          formRef?.current?.setErrors(validationErrors);\r\n        }\r\n      } finally {\r\n        setValidating(false);\r\n      }\r\n    },\r\n    [formRef, schema, success]\r\n  );\r\n\r\n  return {\r\n    handleSubmit,\r\n    validating,\r\n  };\r\n};\r\n","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\management\\project\\form\\schema.ts",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\components\\modal\\styles.ts",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\components\\inputForm.tsx",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\contributor\\protrack\\index.tsx",["301","302","303","304"],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\contributor\\protrack\\styles.ts",[],"C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\contributor\\protrack\\form\\index.tsx",["305"],"import { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { FormHandles, Scope } from \"@unform/core\";\nimport { Form as UForm } from \"@unform/web\";\nimport { forwardRef, RefObject, useEffect, useState } from \"react\";\nimport { Button, Col, FormGroup, Row } from \"reactstrap\";\nimport InputForm from \"../../../../components/inputForm\";\nimport { useValidateForm } from \"../../../../hooks/useValidateForm\";\nimport { schema } from \"./schema\";\n\ninterface Props {\n  onSubmit: (data: FormData) => void;\n  initialData?: { protracks: IField[] };\n}\n\ninterface IField {\n  id?: number;\n  issue: string;\n  description: string;\n}\n\nexport const ProtrackForm = forwardRef<FormHandles, Props>(\n  ({ onSubmit, initialData }, ref) => {\n    const [count, setCount] = useState<number>(\n      initialData?.protracks.length || 1\n    );\n\n    const { handleSubmit } = useValidateForm<any>({\n      formRef: ref as RefObject<FormHandles>,\n      schema,\n      onSuccess: onSubmit,\n    });\n\n    const getArray = (): IField[] =>\n      (ref as RefObject<FormHandles>).current?.getData().protracks;\n\n    const setArray = (arr: IField[]) =>\n      (ref as RefObject<FormHandles>).current?.setData({ protracks: arr });\n\n    const add = () => {\n      setCount((prev) => ++prev);\n    };\n\n    const remove = (index: number) => {\n      setArray(getArray().filter((_, i) => i !== index));\n      setCount((prev) => --prev);\n    };\n\n    return (\n      <>\n        <UForm ref={ref} onSubmit={handleSubmit} initialData={initialData}>\n          {Array(count)\n            .fill(null)\n            .map((_, i) => (\n              <Scope path={`protracks[${i}]`} key={i}>\n                <Row form key={i}>\n                  <Col md={2}>\n                    <FormGroup>\n                      <InputForm\n                        label=\"Issue\"\n                        id=\"issue\"\n                        name=\"issue\"\n                        placeholder=\"Issue\"\n                      />\n                    </FormGroup>\n                  </Col>\n                  <Col md={9}>\n                    <FormGroup>\n                      <InputForm\n                        label=\"Descrição*\"\n                        id=\"description\"\n                        name=\"description\"\n                        placeholder=\"Insira a Descrição\"\n                      />\n                    </FormGroup>\n                  </Col>\n                  <Col\n                    md={1}\n                    className=\"d-flex justify-content-center align-items-center\"\n                  >\n                    <Button\n                      color=\"danger\"\n                      size=\"sm\"\n                      className=\"shadow-sm\"\n                      onClick={() => remove(i)}\n                    >\n                      <FontAwesomeIcon icon={faTimes} />\n                    </Button>\n                  </Col>\n                </Row>\n              </Scope>\n            ))}\n        </UForm>\n\n        <Button color=\"primary\" block onClick={add}>\n          <FontAwesomeIcon icon={faPlus} /> Adicionar Novo\n        </Button>\n      </>\n    );\n  }\n);\n","C:\\Users\\AlvesJos\\Documents\\git-repo\\protrack_front\\src\\views\\contributor\\protrack\\form\\schema.ts",[],{"ruleId":"306","replacedBy":"307"},{"ruleId":"308","replacedBy":"309"},{"ruleId":"310","severity":1,"message":"311","line":63,"column":6,"nodeType":"312","endLine":63,"endColumn":22,"suggestions":"313"},{"ruleId":"310","severity":1,"message":"314","line":51,"column":5,"nodeType":"312","endLine":51,"endColumn":11,"suggestions":"315"},{"ruleId":"310","severity":1,"message":"316","line":99,"column":6,"nodeType":"312","endLine":99,"endColumn":13,"suggestions":"317"},{"ruleId":"310","severity":1,"message":"318","line":106,"column":6,"nodeType":"312","endLine":106,"endColumn":22,"suggestions":"319"},{"ruleId":"320","severity":1,"message":"321","line":1,"column":29,"nodeType":"322","messageId":"323","endLine":1,"endColumn":53},{"ruleId":"310","severity":1,"message":"324","line":124,"column":8,"nodeType":"312","endLine":124,"endColumn":26,"suggestions":"325"},{"ruleId":"310","severity":1,"message":"326","line":40,"column":6,"nodeType":"312","endLine":40,"endColumn":13,"suggestions":"327"},{"ruleId":"310","severity":1,"message":"328","line":21,"column":19,"nodeType":"322","endLine":21,"endColumn":30,"suggestions":"329"},{"ruleId":"320","severity":1,"message":"330","line":16,"column":10,"nodeType":"322","messageId":"323","endLine":16,"endColumn":19},{"ruleId":"320","severity":1,"message":"331","line":16,"column":21,"nodeType":"322","messageId":"323","endLine":16,"endColumn":33},{"ruleId":"320","severity":1,"message":"332","line":24,"column":24,"nodeType":"322","messageId":"323","endLine":24,"endColumn":31},{"ruleId":"310","severity":1,"message":"333","line":32,"column":6,"nodeType":"312","endLine":32,"endColumn":8,"suggestions":"334"},{"ruleId":"320","severity":1,"message":"335","line":5,"column":33,"nodeType":"322","messageId":"323","endLine":5,"endColumn":42},"no-native-reassign",["336"],"no-negated-in-lhs",["337"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProtracks'. Either include it or remove the dependency array.","ArrayExpression",["338"],"React Hook useMemo has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["339"],"React Hook useEffect has missing dependencies: 'getProject' and 'projectId'. Either include them or remove the dependency array.",["340"],"React Hook useEffect has a missing dependency: 'getAllContributors'. Either include it or remove the dependency array.",["341"],"@typescript-eslint/no-unused-vars","'ForwardRefRenderFunction' is defined but never used.","Identifier","unusedVar","React Hook useMemo has a missing dependency: 'labelKey'. Either include it or remove the dependency array.",["342"],"React Hook useEffect has a missing dependency: 'selecteds'. Either include it or remove the dependency array.",["343"],"React Hook useCallback has a missing dependency: 'onSuccess'. Either include it or remove the dependency array.",["344"],"'protracks' is assigned a value but never used.","'setProtracks' is assigned a value but never used.","'loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getProject', 'location.state', and 'projectId'. Either include them or remove the dependency array.",["345"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},"Update the dependencies array to be: [currentProject, getProtracks]",{"range":"362","text":"363"},"Update the dependencies array to be: [data?.projects, navigate]",{"range":"364","text":"365"},"Update the dependencies array to be: [getProject, projectId, state]",{"range":"366","text":"367"},"Update the dependencies array to be: [currentProject, getAllContributors]",{"range":"368","text":"369"},"Update the dependencies array to be: [filter, itemData, labelKey]",{"range":"370","text":"371"},"Update the dependencies array to be: [items, selecteds]",{"range":"372","text":"373"},"Update the dependencies array to be: [onSuccess]",{"range":"374","text":"375"},"Update the dependencies array to be: [getProject, location.state, projectId]",{"range":"376","text":"377"},[2053,2069],"[currentProject, getProtracks]",[1807,1813],"[data?.projects, navigate]",[3367,3374],"[getProject, projectId, state]",[3571,3587],"[currentProject, getAllContributors]",[3166,3184],"[filter, itemData, labelKey]",[983,990],"[items, selecteds]",[585,587],"[onSuccess]",[1173,1175],"[getProject, location.state, projectId]"]